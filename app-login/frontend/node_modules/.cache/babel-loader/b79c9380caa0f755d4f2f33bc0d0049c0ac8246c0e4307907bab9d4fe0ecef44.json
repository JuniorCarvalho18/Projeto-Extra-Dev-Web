{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projeto-Extra-Dev-Web\\\\app-login\\\\frontend\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axiosInstance from \"../services/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const [texto, setTexto] = useState(\"\");\n  const [photo, setPhoto] = useState(null);\n  const [existingPhoto, setExistingPhoto] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      const token = sessionStorage.getItem(\"token\");\n      axiosInstance.get(`http://localhost:3001/posts/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        setTexto(res.data.texto);\n        setExistingPhoto(res.data.photo);\n      }).catch(err => {\n        console.error(\"Erro ao carregar postagem:\", err);\n        alert(\"Erro ao carregar os dados da postagem.\");\n      });\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      texto\n    };\n    const token = sessionStorage.getItem(\"token\");\n    try {\n      let postResponse;\n      if (id) {\n        postResponse = await axiosInstance.put(`http://localhost:3001/posts/${id}`, postData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } else {\n        postResponse = await axiosInstance.post(\"http://localhost:3001/posts\", postData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n\n      // Após criar ou atualizar, se tiver imagem, envia a foto:\n      if (photo) {\n        const formData = new FormData();\n        formData.append(\"photo\", photo);\n        const postId = id || postResponse.data.id;\n        await axiosInstance.post(`http://localhost:3001/posts/${postId}/photo`, formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n      }\n      navigate(\"/posts\");\n    } catch (error) {\n      console.error(\"Erro ao salvar postagem:\", error);\n      alert(\"Erro ao salvar postagem.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? \"Editar Postagem\" : \"Nova Postagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Digite o texto da postagem\",\n        value: texto,\n        onChange: e => setTexto(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), existingPhoto && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3001/uploads/${existingPhoto}`,\n        alt: \"Foto atual\",\n        className: \"post-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setPhoto(e.target.files[0]),\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"YOp4EX9AQzz/54yXkwb3ycdn3Ls=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axiosInstance","jsxDEV","_jsxDEV","PostForm","_s","texto","setTexto","photo","setPhoto","existingPhoto","setExistingPhoto","navigate","id","token","sessionStorage","getItem","get","headers","Authorization","then","res","data","catch","err","console","error","alert","handleSubmit","e","preventDefault","postData","postResponse","put","post","formData","FormData","append","postId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","src","alt","className","type","files","accept","_c","$RefreshReg$"],"sources":["C:/GitHub/Projeto-Extra-Dev-Web/app-login/frontend/src/components/PostForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axiosInstance from \"../services/axiosInstance\";\r\n\r\nfunction PostForm() {\r\n  const [texto, setTexto] = useState(\"\"); \r\n  const [photo, setPhoto] = useState(null); \r\n  const [existingPhoto, setExistingPhoto] = useState(null); \r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); \r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      axiosInstance.get(`http://localhost:3001/posts/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n        .then((res) => {\r\n          setTexto(res.data.texto);\r\n          setExistingPhoto(res.data.photo);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Erro ao carregar postagem:\", err);\r\n          alert(\"Erro ao carregar os dados da postagem.\");\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const postData = { texto };\r\n    const token = sessionStorage.getItem(\"token\");\r\n\r\n    try {\r\n      let postResponse;\r\n      if (id) {\r\n        postResponse = await axiosInstance.put(`http://localhost:3001/posts/${id}`, postData, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n      } else {\r\n        postResponse = await axiosInstance.post(\"http://localhost:3001/posts\", postData, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n      }\r\n\r\n      // Após criar ou atualizar, se tiver imagem, envia a foto:\r\n      if (photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"photo\", photo);\r\n        const postId = id || postResponse.data.id;\r\n\r\n        await axiosInstance.post(`http://localhost:3001/posts/${postId}/photo`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n      }\r\n\r\n      navigate(\"/posts\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar postagem:\", error);\r\n      alert(\"Erro ao salvar postagem.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{id ? \"Editar Postagem\" : \"Nova Postagem\"}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          placeholder=\"Digite o texto da postagem\"\r\n          value={texto}\r\n          onChange={(e) => setTexto(e.target.value)}\r\n          required\r\n        />\r\n        {existingPhoto && (\r\n          <img\r\n            src={`http://localhost:3001/uploads/${existingPhoto}`}\r\n            alt=\"Foto atual\"\r\n            className=\"post-photo\"\r\n          />\r\n        )}\r\n        <input type=\"file\" onChange={(e) => setPhoto(e.target.files[0])} accept=\"image/*\" />\r\n        <button type=\"submit\">Salvar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}