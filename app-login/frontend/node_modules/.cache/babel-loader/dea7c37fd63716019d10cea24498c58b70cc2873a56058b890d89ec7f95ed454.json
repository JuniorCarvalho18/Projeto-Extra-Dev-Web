{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projeto-Extra-Dev-Web\\\\app-login\\\\frontend\\\\src\\\\components\\\\PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../services/axiosInstance\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState({\n    texto: \"\"\n  });\n  useEffect(() => {\n    if (id) {\n      fetchPost();\n    }\n  }, [id]);\n  const fetchPost = async () => {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const response = await axiosInstance.get(`http://localhost:3001/posts/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPost(response.data);\n    } catch (error) {\n      console.error(\"Erro ao carregar postagem:\", error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      if (id) {\n        await axiosInstance.put(`http://localhost:3001/posts/${id}`, post, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Postagem atualizada com sucesso!\");\n      } else {\n        await axiosInstance.post(\"http://localhost:3001/posts\", post, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Postagem criada com sucesso!\");\n      }\n      navigate(\"/posts\");\n    } catch (error) {\n      console.error(\"Erro ao salvar postagem:\", error);\n      alert(\"Erro ao salvar postagem.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? \"Editar Postagem\" : \"Nova Postagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: post.texto,\n        onChange: e => setPost({\n          ...post,\n          texto: e.target.value\n        }),\n        placeholder: \"Digite o texto da postagem\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => navigate(\"/posts\"),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(PostForm, \"lQ25nN00uuL8b7AomSRYYsZn/Fg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","useParams","useNavigate","jsxDEV","_jsxDEV","PostForm","_s","id","navigate","post","setPost","texto","fetchPost","token","sessionStorage","getItem","response","get","headers","Authorization","data","error","console","handleSubmit","e","preventDefault","put","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","onClick","_c","$RefreshReg$"],"sources":["C:/GitHub/Projeto-Extra-Dev-Web/app-login/frontend/src/components/PostForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../services/axiosInstance\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nfunction PostForm() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [post, setPost] = useState({ texto: \"\" });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchPost();\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            const response = await axiosInstance.get(`http://localhost:3001/posts/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setPost(response.data);\r\n        } catch (error) {\r\n            console.error(\"Erro ao carregar postagem:\", error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            if (id) {\r\n                await axiosInstance.put(`http://localhost:3001/posts/${id}`, post, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                alert(\"Postagem atualizada com sucesso!\");\r\n            } else {\r\n                await axiosInstance.post(\"http://localhost:3001/posts\", post, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                alert(\"Postagem criada com sucesso!\");\r\n            }\r\n            navigate(\"/posts\");\r\n        } catch (error) {\r\n            console.error(\"Erro ao salvar postagem:\", error);\r\n            alert(\"Erro ao salvar postagem.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>{id ? \"Editar Postagem\" : \"Nova Postagem\"}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    value={post.texto}\r\n                    onChange={(e) => setPost({ ...post, texto: e.target.value })}\r\n                    placeholder=\"Digite o texto da postagem\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Salvar</button>\r\n                <button type=\"button\" onClick={() => navigate(\"/posts\")}>Cancelar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}