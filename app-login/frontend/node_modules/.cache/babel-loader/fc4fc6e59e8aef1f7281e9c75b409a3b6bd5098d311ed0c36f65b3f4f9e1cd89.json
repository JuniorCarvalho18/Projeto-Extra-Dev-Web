{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Projeto-Extra-Dev-Web\\\\app-login\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axiosInstance from \"../services/axiosInstance\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const response = await axiosInstance.get(\"http://localhost:3001/posts\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Erro ao carregar postagens:\", error);\n      alert(\"Erro ao carregar postagens.\");\n    }\n  };\n  const handleDelete = async postId => {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      await axiosInstance.delete(`http://localhost:3001/posts/${postId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Postagem deletada com sucesso!\");\n      fetchPosts(); // Atualiza a lista de postagens\n    } catch (error) {\n      console.error(\"Erro ao deletar postagem:\", error);\n      alert(\"Erro ao deletar postagem.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Postagens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        id: \"Npost\",\n        to: \"/posts/new\",\n        children: \"Nova Postagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.texto, /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/edit/${post.id}`,\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(post.id),\n          children: \"Deletar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","Link","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","fetchPosts","token","sessionStorage","getItem","response","get","headers","Authorization","data","error","console","alert","handleDelete","postId","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","to","map","post","texto","onClick","_c","$RefreshReg$"],"sources":["C:/GitHub/Projeto-Extra-Dev-Web/app-login/frontend/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axiosInstance from \"../services/axiosInstance\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            const response = await axiosInstance.get(\"http://localhost:3001/posts\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setPosts(response.data);\r\n        } catch (error) {\r\n            console.error(\"Erro ao carregar postagens:\", error);\r\n            alert(\"Erro ao carregar postagens.\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (postId) => {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            await axiosInstance.delete(`http://localhost:3001/posts/${postId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            alert(\"Postagem deletada com sucesso!\");\r\n            fetchPosts(); // Atualiza a lista de postagens\r\n        } catch (error) {\r\n            console.error(\"Erro ao deletar postagem:\", error);\r\n            alert(\"Erro ao deletar postagem.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h2>Lista de Postagens</h2>\r\n            <button>\r\n                <Link id=\"Npost\" to=\"/posts/new\">Nova Postagem</Link>\r\n            </button>\r\n            <ul>\r\n                {posts.map(post => (\r\n                    <li key={post.id}>\r\n                        {post.texto}\r\n                        <Link to={`/posts/edit/${post.id}`}>Editar</Link>\r\n                        <button onClick={() => handleDelete(post.id)}>Deletar</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}